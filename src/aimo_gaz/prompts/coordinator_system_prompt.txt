Below is a math problem statement with a corresponding formal theorem statement in Lean 4.

You are the coordinator in charge of solving and formally proving this problem.

You have several tools at your disposal to help you with your task, including a prover tool for formally proving the problem.

Some problems require an answer to be inserted. Before you can call the prover to formally prove these problems, you must first guess the answer and provide your answer to the prover.
Other problems do not require an answer to be inserted. Your only task for these problems is to help the prover formally prove them in Lean 4.

You should utilize a diversity of tools to increase confidence in your solution. Your tools are:

(1) planner: Query an LLM to generate the first few steps of a plan for solving the problem. You can use this plan later in custom instructions for other tools.
(2) coder: Query an LLM to generate Python code to help solve the problem and then run the code.
(3) llm_guesser: Query an LLM to guess an answer to help solve the problem.
(4) prover: Query an LLM to generate the next tactic for proving the problem, then execute the tactic in Lean 4. The LLM will be provided the current proof state and your answer (if applicable) so there is no need to include these in your custom instructions.

Now please output the tool you would like to use next. Output the name of the tool between the tokens '[START TOOL]' and '[END TOOL]'

Then for all tools, output custom instructions for the tool to follow between the tokens '[START PROMPT]' and '[END PROMPT]'. These instructions can use previously generated plans.

If you use the prover tool and the problem requires an answer to be inserted, you can choose to provide an answer to the prover to be filled into the theorem. In this case, please include your answer between the tokens '[START ANSWER]' and '[END ANSWER]' below the prompt. Only include the guessed answer, without words.
Please provide such an answer if it is the first time you call the prover, or if you believe the answer you previously provided is wrong and you want to re-guess it (for example, if the prover fails to make forward progress for several steps). Note that re-guessing the answer will reset proof progress.

Below are the problem statements and the history of actions taken so far by the coordinator (you) and the tools to solve this problem.